name: 'Docker build'
description: 'Docker build'
inputs:
  dir:
    description: 'Directory'
    required: true
  ecr_repo:
    description: 'ECR Repo URL'
    required: true
  ecr_id:
    description: 'ECR Repo ID'
    required: true
runs:
  using: "composite"
  steps:
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registries: ${{ inputs.ecr_id }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ${{inputs.dir}}
          push: true
          tags: |
            ${{inputs.ecr_repo}}:test:latest
            ${{inputs.ecr_repo}}:test:${{ github.sha }}

      - name: Deploy Lambda function
        run: |
          function_name=$(basename $dir)
          # Check if the Lambda function already exists
          if aws lambda get-function --function-name $function_name &> /dev/null; then
              # Function exists, update the function image
              aws lambda update-function-code \
                  --function-name $function_name \
                  --image-uri "${{ inputs.ecr_repo }}:latest"
          else
              # Function doesn't exist, create a new one
              if aws iam get-role --role-name ${function_name}-role &> /dev/null; then
                role_arn=$(aws iam get-role --role-name ${function_name}-role --query 'Role.Arn' --output text)
              else
                # Create a new IAM role for the Lambda function
                role_arn=$(aws iam create-role --role-name ${function_name}-role --assume-role-policy-document '{"Version": "2012-10-17","Statement": [{"Effect": "Allow","Principal": {"Service": "lambda.amazonaws.com"},"Action": "sts:AssumeRole"}]}' --query 'Role.Arn' --output text)
                
                # Attach basic Lambda execution policy to the new role
                aws iam attach-role-policy --policy-arn arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole --role-name ${function_name}-role
                aws iam attach-role-policy --policy-arn arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess --role-name ${function_name}-role

                # Role attachment takes time
                sleep 30
              fi
              aws lambda create-function \
                --function-name $function_name \
                --package-type Image \
                --code ImageUri=${{ inputs.ecr_repo }}:latest \
                --role $role_arn
          fi
        shell: bash
        env:
          dir: ${{inputs.dir}}
        
      - name: Clean up
        run: |
          docker logout ${{ inputs.ecr_repo }}
          docker rmi my-lambda-function:latest
        shell: bash